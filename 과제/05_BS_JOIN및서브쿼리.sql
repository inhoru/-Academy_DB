--1. 70년대 생(1970~1979) 중 여자이면서 전씨인 사원의 이름과 주민번호, 부서 명, 직급
SELECT EMP_NAME,EMP_NO,DEPT_TITLE,JOB_NAME
FROM EMPLOYEE 
        JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
        JOIN JOB USING(JOB_CODE)
WHERE SUBSTR(EMP_NO,1,2) >=70 AND SUBSTR(EMP_NO,1,2) <80 AND 
SUBSTR(EMP_NO,8,1) IN ('2','4') AND EMP_NAME LIKE '전%';

--2. 나이 상 가장 막내의 사원 코드, 사원 명, 나이, 부서 명, 직급 명 조회
SELECT EMP_ID AS 사원코드,EMP_NAME AS 사원명,
EXTRACT(YEAR FROM SYSDATE)-EXTRACT(YEAR FROM TO_DATE(SUBSTR(EMP_NO,1,2),'RR'))AS 나이,
DEPT_TITLE AS 부서명,JOB_NAME AS 직급명
FROM (SELECT * FROM EMPLOYEE E ORDER BY EXTRACT(YEAR FROM SYSDATE)-EXTRACT(YEAR FROM TO_DATE(SUBSTR(EMP_NO,1,2),'RR')
))
    JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
    JOIN JOB USING(JOB_CODE)
WHERE ROWNUM =1  AND EMP_ID NOT IN (252,251);
  
 --3. 이름에 ‘형’이 들어가는 사원의 사원 코드, 사원 명, 직급 
 SELECT EMP_ID AS 사원코드,EMP_NAME AS 사원명,JOB_NAME AS 직급
 FROM EMPLOYEE
     JOIN JOB USING(JOB_CODE)
WHERE EMP_NAME LIKE '%형%';

--4. 부서코드가 D5이거나 D6인 사원의 사원 명, 직급 명, 부서 코드, 부서 명 조회
SELECT EMP_NAME,JOB_NAME,DEPT_CODE,DEPT_TITLE
FROM EMPLOYEE
    JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
    JOIN JOB USING(JOB_CODE)
WHERE DEPT_CODE IN (SELECT DEPT_CODE FROM EMPLOYEE WHERE DEPT_CODE IN ('D5','D6'));

--5 . 보너스를 받는 사원의 사원 명, 부서 명, 지역 명 조회
SELECT EMP_NAME,NVL(BONUS,0), DEPT_TITLE,LOCAL_NAME
FROM EMPLOYEE
    JOIN DEPARTMENT ON DEPT_ID = DEPT_CODE
    JOIN LOCATION ON LOCAL_CODE = LOCATION_ID
WHERE  NVL(BONUS,0) !=0;

-- 6. 사원 명, 직급 명, 부서 명, 지역 명  
SELECT EMP_NAME, JOB_NAME,DEPT_TITLE,LOCAL_NAME
FROM EMPLOYEE
    JOIN JOB USING(JOB_CODE)
    JOIN DEPARTMENT ON DEPT_ID = DEPT_CODE
    JOIN LOCATION ON LOCAL_CODE = LOCATION_ID;
   
-- 7. 한국이나 일본에서 근무 중인 사원의 사원 명, 부서 명, 지역 명, 국가 명 조회
SELECT EMP_NAME,DEPT_TITLE,LOCAL_NAME,NATIONAL_CODE
FROM EMPLOYEE
     JOIN DEPARTMENT ON DEPT_ID = DEPT_CODE
     JOIN LOCATION ON LOCAL_CODE = LOCATION_ID
WHERE NATIONAL_CODE IN ('KO','JP');

--8. 한 사원과 같은 부서에서 일하는 사원의 이름 조회
SELECT E.EMP_NAME,E.DEPT_CODE,M.EMP_NAME
FROM EMPLOYEE E
    JOIN EMPLOYEE M ON E.DEPT_CODE=M.DEPT_CODE
WHERE E.EMP_NAME!=M.EMP_NAME
ORDER BY E.EMP_NAME;

--9. 보너스가 없고 직급 코드가 J4이거나 J7인 사원의 이름, 직급 명, 급여 조회(NVL 이용)
SELECT EMP_NAME,JOB_NAME,NVL(BONUS,SALARY)
FROM EMPLOYEE
    JOIN JOB USING (JOB_CODE)
WHERE JOB_CODE IN ('J4','J7');

--10. 보너스 포함한 연봉이 높은 5명의 사번, 이름, 부서 명, 직급, 입사일, 순위 조회
SELECT T.*,ROWNUM
FROM (SELECT EMP_ID,EMP_NAME,DEPT_TITLE,JOB_NAME,HIRE_DATE 
    FROM EMPLOYEE  
    JOIN JOB USING(JOB_CODE)
    JOIN DEPARTMENT ON DEPT_CODE=DEPT_ID
    ORDER BY (SALARY+SALARY*NVL(BONUS,0))*12 DESC) T
WHERE ROWNUM<=5;

--11. 부서 별 급여 합계가 전체 급여 총 합의 20%보다 많은 부서의 부서 명, 부서 별 급여 합계 조회
--11-1 JOIN과 HAVING 사용
SELECT DEPT_TITLE,SUM(SALARY)
FROM DEPARTMENT  
    JOIN EMPLOYEE  ON DEPT_CODE = DEPT_ID   
GROUP BY DEPT_TITLE
HAVING SUM(SALARY)>(SELECT SUM(SALARY)*0.2 FROM EMPLOYEE);

-- 11-2.인라인 뷰 사용
SELECT *
FROM (
SELECT DEPT_TITLE,SUM(SALARY) AS TOTAL
FROM DEPARTMENT  
    JOIN EMPLOYEE  ON DEPT_CODE = DEPT_ID   
GROUP BY DEPT_TITLE
)
WHERE TOTAL >(SELECT SUM(SALARY)*0.2 FROM EMPLOYEE);

-- 11-3. WITH 사용   
WITH TOPN_SAL AS(SELECT DEPT_TITLE,SUM(SALARY) AS TOTAL
FROM DEPARTMENT  
    JOIN EMPLOYEE  ON DEPT_CODE = DEPT_ID   
GROUP BY DEPT_TITLE)
SELECT * FROM TOPN_SAL 
WHERE TOTAL > (SELECT SUM(SALARY)*0.2 FROM EMPLOYEE);

--12. 부서 명과 부서 별 급여 합계 조회
SELECT DEPT_TITLE,SUM(SALARY)
FROM DEPARTMENT
    RIGHT JOIN EMPLOYEE  ON DEPT_CODE = DEPT_ID   
GROUP BY DEPT_TITLE;








    

