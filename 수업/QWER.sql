-- TCL : 트렌젝션을 컨트롤하는 명령어
-- COMMIT : 지금까지 실행한 수정구문(DML)명령어를 모두 DB에 저장
-- ROLLBACK : 지금까지 실행한 수정구문(DML)명령어를 모두 취소
-- 트렌젝션 : 하나의 작업단위 한개 서비스
-- 트렌젝션의 대상되는 명령어 : DML(INSERT, UPDATE, DELETE)

INSERT INTO JOB VALUES('J0','강사');
SELECT * FROM JOB;
COMMIT;

-- ORACLE에서 제공하는 OBJECT활용하기
-- USER, TABLE, VIEW, SEQUENCE, INDEX, SYNONYM, FUNCTION, PROCEDURE, PACKAGE 등등
CREATE TABLE EMP_M1
AS SELECT * FROM EMPLOYEE;
CREATE TABLE EMP_M2
AS SELECT * FROM EMPLOYEE WHERE JOB_CODE='J4';

INSERT INTO EMP_M2 VALUES(999,'곽두원','561014-123456','KWACK@DF.COM','01021314123','D5','J1','S1',90000,0.5,
    NULL,SYSDATE,DEFAULT,DEFAULT);
UPDATE EMP_M2 SET SALARY=0;
COMMIT;
SELECT * FROM EMP_M1;
SELECT * FROM EMP_M2;

MERGE INTO EMP_M1 USING EMP_M2 ON(EMP_M1.EMP_ID=EMP_M2.EMP_ID)
WHEN MATCHED THEN
    UPDATE SET
        EMP_M1.SALARY=EMP_M2.SALARY
WHEN NOT MATCHED THEN
    INSERT VALUES(EMP_M2.EMP_ID,EMP_M2.EMP_NAME,EMP_M2.EMP_NO,EMP_M2.EMAIL,EMP_M2.PHONE,
        EMP_M2.DEPT_CODE,EMP_M2.JOB_CODE,EMP_M2.SAL_LEVEL,EMP_M2.SALARY,EMP_M2.BONUS,
        EMP_M2.MANAGER_ID,
        EMP_M2.HIRE_DATE,EMP_M2.ENT_DATE,EMP_M2.ENT_YN);
        
SELECT * FROM EMP_M1;        
